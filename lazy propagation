#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define rep(i,n) for (int i=1;i <=int(n);i++)
#define rrep(i,n) for (int i=int(n); i >= 1; i--)
int a[800009];ll b[800009];int l[800006],r[800006];int laz[800006];

string s,f;
void build(int i,int l, int r){
   
     
     laz[i]=-1;
     if (l==r) {
          a[i]=f[l-1]-'0';
          return;
     }
     int mid=(l+r)/2;
     build(i*2,l,mid);
     build(i*2+1,mid+1,r);
     a[i]=a[i*2]+a[i*2+1];
     
}
void push(int i,int l,int r){
       assert(i > 0);
     if (laz[i]==-1) return;
     if (l!=r){
          int mid=(l+r)/2;
          laz[i*2]=laz[i];
          a[i*2]=(mid-l+1)*laz[i];
          laz[i*2+1]=laz[i];
          a[i*2+1]=(r-(mid+1)+1)*laz[i];
          laz[i]=-1;
     }
     laz[i]=-1;

}
int get(int i,int l,int r,int ll, int rr){
      
     if (l > rr || r < ll ) return 0;
     if (l >= ll && r <= rr){
          return a[i];
     }
     push(i,l,r);
     int mid=(l+r)/2;
     return get(i*2,l,mid,ll,rr) + get(i*2+1,mid+1,r,ll,rr);
     
}
void modify(int i,int l,int r,int val){
      
     laz[i]=val;
     a[i]=(r-l+1)*val;
}
void upd(int i,int l,int r,int ll,int rr,int val){
   
     if (l > rr || r < ll ) return;
     if (l >= ll && r <= rr){
          modify(i,l,r,val);
          return;
     }
     push(i,l,r);
     int mid= (l+r)/2;
     
     upd(i*2,l,mid,ll,rr,val);
     
     upd(i*2+1,mid+1,r,ll,rr,val);
     a[i]=a[i*2+1]+a[i*2];
     return;
}
int main(){
     int t; cin >> t;
     while (t--){
          
          int n,q; cin >> n >> q;
          cin >> s >> f;
          rep(i,q) cin >> l[i] >> r[i];
          build(1,1,n);
          
          bool bad=false;
        //  rep(i,n) cout << get(1,1,n,i,i) << ' ' ; cout << '\n';
         
          rrep(i,q){
               int cnt = get(1,1,n,l[i],r[i]);
               int len=r[i]-l[i]+1;
              
               if (cnt*2==r[i]-l[i]+1) bad=true;
              // cout  << len/2 << ' ' << cnt << '\n';
               if (cnt*2 < len ) {upd(1,1,n,l[i],r[i],0);}
               else { upd(1,1,n,l[i],r[i],1);}
            //   rep(i,n) cout << get(1,1,n,i,i) << ' ' ; cout << '\n';
          }
          rep(i,n) {
              
               if (get(1,1,n,i,i) != s[i-1]-'0') bad=true;
          }
               if (bad)
               cout << "NO\n";
          else
               cout <<"YES\n";
     }
   
     
          
     
     return 0;
}
